{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","AuthFrom","useState","email","setEmail","password","setPassword","newAccount","setNewAccout","error","setError","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","pe","placeholder","r","equired","type","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","getData","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","length","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e4d214a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nexport const fbase = firebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthFrom = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccout] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        console.log(event.target.name);\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password) // create account\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password)// log in\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccout(prev => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    pe=\"email\"\n                    placeholder=\"Email\" r\n                    equired\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                />\n                {error&& <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    )\n\n};\n\nexport default AuthFrom;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthFrom from \"../components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthFrom />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false); //edit모드인지 아닌지 알려주는 부분\n    const [newNweet, setNewNweet] = useState(nweetObj.text); //input에 입력된 text 업데이트\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        console.log(ok)\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(nweetObj, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    }\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Edit yout nweet\"\n                                value={newNweet}\n                                required\n                                autoFocus\n                                onChange={onChange}\n                                className=\"formInput\"\n                            />\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"></input>\n                        </form>\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                            Cancel\n                        </span>\n                    </>\n                ) : (<><h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n                    )}\n        </div>\n    );\n}\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value }\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n};\n\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    console.log(userObj);\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        const getData = dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n        return () => getData();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n    const getMyNweets = async () => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n        console.log(nweets.docs.map(doc => doc.data()));\n    }\n    useEffect(() => {\n        getMyNweets();\n    });\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj?.displayName?.length\n                            ? `${userObj.displayName}'의 Profile`\n                            : \"Profile\"}\n\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                        <Redirect from='*' to=\"/\" />\n                    </div>\n                ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                            <Redirect from='*' to=\"/\" />\n                        </>\n                    )};\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      };\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n          \"Initionalizing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}